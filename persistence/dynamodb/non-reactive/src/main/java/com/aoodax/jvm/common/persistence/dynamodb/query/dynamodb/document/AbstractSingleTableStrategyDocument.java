package com.aoodax.jvm.common.persistence.dynamodb.query.dynamodb.document;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import java.util.Date;
import java.util.Optional;
import lombok.*;
import static com.aoodax.jvm.common.utils.validation.ParameterValidator.assertNotNullParameterArgument;

@DynamoDBDocument
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(exclude = {"createdAt", "updatedAt"})
@Setter
public class AbstractSingleTableStrategyDocument {

    public static final String PARTITION_KEY_NAME = "partition_key";
    public static final String SORT_KEY_NAME = "sort_key";
    public static final String CREATED_AT_NAME = "created_at";
    public static final String UPDATED_AT_NAME = "updated_at";

    protected CompositeKey partitionKey;
    protected CompositeKey sortKey;
    protected Date createdAt;
    protected Date updatedAt;

    public AbstractSingleTableStrategyDocument(final String pkPrefix, final String partitionKey) {
        assertNotNullParameterArgument(pkPrefix, "pkPrefix");

        this.partitionKey = CompositeKey.from(pkPrefix, partitionKey);
    }

    public AbstractSingleTableStrategyDocument(final String pkPrefix,
        final String skPrefix,
        final String partitionKey,
        final String sortKey) {
        this(pkPrefix, partitionKey);
        assertNotNullParameterArgument(skPrefix, "skPrefix");

        this.sortKey = CompositeKey.from(skPrefix, sortKey);
    }

    @DynamoDBHashKey(attributeName = PARTITION_KEY_NAME)
    @DynamoDBTypeConverted(converter = CompositeKey.CompositeKeyConverter.class)
    public CompositeKey getPartitionKey() {
        return partitionKey;
    }

    @DynamoDBRangeKey(attributeName = SORT_KEY_NAME)
    @DynamoDBTypeConverted(converter = CompositeKey.CompositeKeyConverter.class)
    public CompositeKey getSortKey() {
        return sortKey;
    }

    @DynamoDBAttribute(attributeName = CREATED_AT_NAME)
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    public Date getCreatedAt() {
        return createdAt;
    }

    @DynamoDBAttribute(attributeName = UPDATED_AT_NAME)
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    public Date getUpdatedAt() {
        return updatedAt;
    }

    @DynamoDBIgnore
    public Optional<CompositeKey> getSortKeyOptional() {
        return Optional.ofNullable(getSortKey());
    }
}
