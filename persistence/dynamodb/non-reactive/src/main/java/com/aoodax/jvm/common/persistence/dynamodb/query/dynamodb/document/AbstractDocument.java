package com.aoodax.jvm.common.persistence.dynamodb.query.dynamodb.document;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import java.util.Date;
import lombok.*;
import static com.aoodax.jvm.common.utils.validation.ParameterValidator.assertHasTextParameterArgument;

@DynamoDBDocument
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(exclude = {"createdAt", "updatedAt"})
@Setter
public class AbstractDocument {

    private static final String UID_ATTRIBUTE_NAME = "uid";
    private static final String CREATED_AT_ATTRIBUTE_NAME = "created_at";
    private static final String UPDATED_AT_ATTRIBUTE_NAME = "updated_at";

    @DynamoDBHashKey(attributeName = UID_ATTRIBUTE_NAME)
    protected String uid;

    @DynamoDBAttribute(attributeName = CREATED_AT_ATTRIBUTE_NAME)
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    protected Date createdAt;

    @DynamoDBAttribute(attributeName = UPDATED_AT_ATTRIBUTE_NAME)
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    protected Date updatedAt;

    public AbstractDocument(final String uid) {
        assertHasTextParameterArgument(uid, "uid");
        this.uid = uid;
    }

    @DynamoDBHashKey(attributeName = UID_ATTRIBUTE_NAME)
    public String getUid() {
        return uid;
    }

    @DynamoDBAttribute(attributeName = CREATED_AT_ATTRIBUTE_NAME)
    public Date getCreatedAt() {
        return createdAt;
    }

    @DynamoDBAttribute(attributeName = UPDATED_AT_ATTRIBUTE_NAME)
    public Date getUpdatedAt() {
        return updatedAt;
    }
}
